version: "4.0"

services:
  sanitize-api:
    build: .
    container_name: sanitize-api
    ports:
      - "8081:8080"
    environment:
      OTEL_SDK_DISABLED: true
      SQL_USERNAME: "sa"
      SQL_PASSWORD: "YourStrong!Passw0rd"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:3000
      OTEL_LOGS_EXPORTER: otlp
    volumes:
      - ../../build/libs/app-0.0.1-SNAPSHOT.jar:/app/app.jar
  mssql:
    image: mcr.microsoft.com/mssql/server:latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Express
      - MSSQL_TLS_CERTIFICATE=/etc/ssl/certs/mssql-selfsigned.crt
      - MSSQL_TLS_PRIVATE_KEY=/etc/ssl/certs/mssql-selfsigned.key
#      - MSSQL_TLS_TRUST_CERTIFICATES=/etc/ssl/certs/mssql-selfsigned.crt  # Optional, for mutual TLS
      - MSSQL_ENABLE_HADR=0  # Disable high availability if not needed
      - MSSQL_TLS_VERSION=1.2  # Specify TLS version if needed
    volumes:
      - ./certs:/etc/ssl/certs  # Mount the certs directory to the container
      - ./mssql:/docker-entrypoint-initdb.d
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -C -Q 'SELECT 1' || exit 1" ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
#    tty: true
#    stdin_open: true
#    command: [ "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong!Passw0rd", "-C"]
    ports:
      - "1433:1433"
  collector:
    image: otel/opentelemetry-collector-contrib:0.96.0
    command: [ "--config=/etc/otelcol/config.yml" ]
    volumes:
      - ./otel-config.yaml:/etc/otelcol/config.yml
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
    depends_on:
      - tempo
      - loki
  loki:
    image: grafana/loki:latest
    container_name: loki
    command:
      - -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
  tempo:
    image: grafana/tempo:1.5.0
    volumes:
      - ./config/tempo/config.yaml:/etc/tempo/config.yaml
    command: [
      "--multitenancy.enabled=false",
      "--search.enabled=true",
      "-config.file=/etc/tempo/config.yaml",
    ]
    ports:
      - "8081:80"
  grafana:
    image: grafana/grafana:9.1.5
    volumes:
      - ./config/grafana:/etc/grafana/provisioning/datasources
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=tempoServiceGraph tempoSearch tempoBackendSearch tempoApmTable
    ports:
      - "3000:3000"